/* Define o fundo da página como preto e oculta a barra de rolagem */
body {
  background-color: #000000;
  overflow: hidden;
}

/* Cria um pseudo-elemento ::after em <main> para aplicar um gradiente decorativo fixo */
main::after {
  content: ""; /* conteúdo vazio obrigatório para pseudo-elementos */
  position: fixed; /* fixa na tela independente do scroll */
  top: 0; /* alinha no topo */
  left: 0; /* alinha à esquerda */
  min-height: 100vh; /* altura mínima de 100% da viewport */
  width: 80vw; /* largura de 80% da viewport */
  background: linear-gradient(92deg, #000 25%, rgba(0, 0, 0, 0) 75%) no-repeat; /* gradiente lateral */
}

/* Define estilo padrão para o personagem: invisível e fora da tela inicialmente */
main .character {
  display: none; /* não aparece por padrão */
  height: 100vh; /* ocupa toda a altura da tela */
  opacity: 0; /* totalmente transparente */
  transition: opacity 0.5s ease-in-out; /* animação de transição suave */
  display: none; /* repetido, mas redundante */
}

/* Quando um personagem tem a classe .selected, ele se torna visível */
main .character.selected {
  display: block;
}

/* Estiliza a imagem do personagem dentro da seção */
main .character .image {
  width: 100%; /* ocupa 100% da largura do container */
  height: 100%; /* ocupa 100% da altura do container */
  object-fit: cover; /* cobre o container sem distorcer */
}

/* Garante que o personagem visível tenha opacidade total */
.character.selected {
  display: block;
  opacity: 1;
}

/* Container de conteúdo com texto descritivo do personagem */
.content {
  position: absolute; /* posicionamento relativo à página */
  top: 0;
  left: 120px; /* afasta da esquerda */
  display: flex; /* layout em flexbox */
  flex-direction: column; /* elementos em coluna */
  justify-content: center; /* centraliza verticalmente */
  height: 100vh; /* ocupa toda a altura da viewport */
  max-width: 380px; /* limite máximo de largura */
  z-index: 1; /* fica acima dos personagens */
}

/* Nome do personagem */
.content .character-name {
  color: #ffffff;
  font-size: 48px;
  font-family: "Secular One";
  font-weight: 400;
  margin-bottom: 20px;
}

/* Descrição do personagem */
.content .description {
  color: #ffffff;
  font-family: "Rubik";
  font-size: 16px;
  line-height: 24px;
}

/* Container dos botões de personagens */
.buttons {
  background-color: rgba(0, 0, 0, 0.3); /* fundo transparente escuro */
  position: fixed; /* fixo à direita */
  top: 0;
  right: 0;
  width: 180px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  gap: 16px; /* espaçamento entre botões */
}

/* Botões individuais */
.buttons .button {
  border: none;
  background-color: #000000;
  width: 90px;
  height: 90px;
  cursor: pointer;
  transition: transform 0.3s ease;
  border-radius: 50%; /* formato circular */
}

/* Imagens dos botões */
.buttons .button img {
  border-radius: 50%; /* garante que as imagens fiquem circulares também */
}

/* Botão selecionado com destaque visual */
.buttons .button.selected {
  transform: scale(1.2); /* aumenta o botão */
  box-shadow: 0 0 10px #d9d9d9; /* brilho branco/cinza */
}

/* Estilos individuais de sombra por tipo de personagem */
.buttons .button.cyberstorm.selected {
  box-shadow: 0 0 10px #47ffc5; /* verde água */
}

.buttons .button.codepixie.selected {
  box-shadow: 0 0 10px #9747ff; /* roxo */
}

.buttons .button.hexblade.selected {
  box-shadow: 0 0 10px #ffa947; /* laranja */
}

.buttons .button.neonpulse.selected {
  box-shadow: 0 0 10px #e4309a; /* rosa neon */
}

.buttons .button.codebreaker.selected {
  box-shadow: 0 0 10px #fff047; /* amarelo */
}
